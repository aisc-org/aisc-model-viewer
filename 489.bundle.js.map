{"version":3,"file":"489.bundle.js","mappings":"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","sources":["webpack://aisc-model-viewer/./src/viewer.ts","webpack://aisc-model-viewer/./src/app.ts"],"sourcesContent":["import * as THREE from 'three'\nimport * as BufferGeometryUtils from 'three/examples/jsm/utils/BufferGeometryUtils'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport GUI from 'lil-gui'\n\nconst colors = {\n    aisc_blue: new THREE.Color('#00558A'),\n    orange:   new THREE.Color('#FF8200'),\n    white:    new THREE.Color('#FFFFFF'),\n    smokey:   new THREE.Color('#58595B'),\n    valley:   new THREE.Color('#00746F'),\n    globe:    new THREE.Color('#006C93'),\n    smokey_x: new THREE.Color('#333333'),\n    gray_1:   new THREE.Color('#F6F6F6'),\n    gray_2:   new THREE.Color('#E0E0E0'),\n    gray_3:   new THREE.Color('#CACACA'),\n    gray_4:   new THREE.Color('#B6B6B6'),\n    black:    new THREE.Color('#000000'),\n}\n\n\ninterface MorphedAttributes {\n    positionAttribute: THREE.Float32BufferAttribute\n    normalAttribute: THREE.Float32BufferAttribute\n    morphedPositionAttribute: THREE.Float32BufferAttribute\n    morphedNormalAttribute: THREE.Float32BufferAttribute\n}\n\n\n/**\n * Use built-in three.js tools to calculate morphed geometry. Not working\n * as of three.js r131 -- computeMorphedAttributes just returns the same\n * values for positionAttribute and morphedPositionAttribute. Unclear what\n * the underlying problem is.\n */\nfunction getMorphedGeometry(mesh: THREE.Mesh) {\n    const attributes = BufferGeometryUtils.computeMorphedAttributes(mesh) as MorphedAttributes\n\n    const morphed = new THREE.BufferGeometry()\n    morphed.setAttribute('position', attributes.morphedPositionAttribute)\n    morphed.setAttribute('normal', attributes.morphedNormalAttribute)\n    morphed.setIndex(mesh.geometry.index)\n\n    morphed.morphTargetsRelative = mesh.geometry.morphTargetsRelative\n\n    return morphed\n}\n\n\n/**\n * Create new geometry from morphed mesh.\n *\n * Workaround in order to be able to update past three.js r131. A bit\n * hacky: only calculates updated positions, assumes that morph targets\n * are relative, and only supports one morph influence at a time. These\n * are fine for the use case of the model viewer, which is only morphing\n * from undeformed to deformed geometry, and not trying to mix them.\n */\nfunction getMorphedGeometry2(mesh: THREE.Mesh, morphIndex: number) {\n    if (mesh.morphTargetInfluences === undefined) {\n        return mesh.geometry.clone();\n    }\n    if (mesh.geometry.attributes.position instanceof THREE.GLBufferAttribute) {\n        throw new Error(\"Geometries using `GLBufferAttribute` are not supported\");\n    }\n\n    const N = mesh.geometry.attributes.position.array.length\n    const morphedData = new Float32Array(N)\n    const influence = mesh.morphTargetInfluences[morphIndex]\n    for (let i = 0; i < N; i++) {\n        let position = mesh.geometry.attributes.position.array[i]\n        let morph = mesh.geometry.morphAttributes.position[morphIndex].array[i]\n        morphedData[i] = position + influence * morph\n    }\n\n    const morphedGeometry = new THREE.BufferGeometry()\n    morphedGeometry.setIndex(mesh.geometry.index)\n    morphedGeometry.attributes.position = new THREE.Float32BufferAttribute(morphedData, 3)\n\n    return morphedGeometry\n}\n\n\ninterface WireframeOptions {\n    useMorphed?: boolean\n    useWireframe?: boolean\n}\n\n\nexport class ModelViewer {\n    container: HTMLElement\n    loader: GLTFLoader\n\n    scene: THREE.Scene\n    camera: THREE.PerspectiveCamera\n    renderer: THREE.WebGLRenderer\n    controls: OrbitControls\n    loadingSpinner?: HTMLDivElement\n    gui?: GUI\n    titleBlock?: TitleBlock\n\n    wireframeColor: THREE.Color = colors.black\n    backgroundColor: THREE.Color = colors.aisc_blue\n\n    // Whether to render edges as lines in the model.\n    renderEdges: Boolean = true\n\n    // Controls whether the EdgesGeometry used for the outline draws the edge.\n    // If the angle between the adjacent normals exceeds the threshold, the edge\n    // is drawn. Use a fairly high threshold angle -- 20 degrees -- so that\n    // edges don't show up on curved surfaces.\n    edgeThresholdAngle: number = 20\n\n    // Observer that watches for window resizes, and updates the canvas size to\n    // match.\n    private resizeObserver: MutationObserver\n\n    constructor() {\n        const draco = new DRACOLoader()\n        draco.setDecoderPath('https://www.gstatic.com/draco/v1/decoders/')\n        this.loader = new GLTFLoader()\n        this.loader.setDRACOLoader(draco)\n\n        this.scene = new THREE.Scene()\n        this.scene.background = this.backgroundColor\n        this.camera = new THREE.PerspectiveCamera(75)\n        this.addLights()\n        this.scene.add(this.camera)\n\n        this.renderer = new THREE.WebGLRenderer({ antialias: true })\n        this.renderer.setPixelRatio(window.devicePixelRatio)\n        this.renderer.outputColorSpace = THREE.SRGBColorSpace\n\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement)\n        this.controls.addEventListener('change', this.render.bind(this))\n        this.controls.update()\n\n        matchMedia(`resolution: ${window.devicePixelRatio}dppx`).addEventListener('change', this.updatePixelRatio.bind(this))\n\n        const resizeCallback = this.updateCanvasSize.bind(this)\n        this.resizeObserver = new MutationObserver(resizeCallback)\n        window.addEventListener('resize', resizeCallback)\n\n        // Add viewer as global variable for console access\n        ;(window as any).modelViewer = this\n    }\n\n    destroyContent() {\n        this.destroyGUI()\n        this.titleBlock?.destroy()\n        this.titleBlock = undefined\n    }\n\n    attachToContainer(container: HTMLElement) {\n        this.resizeObserver.disconnect()\n        this.container = container\n        this.resizeObserver.observe(this.container, { attributeFilter: ['style'], childList: true })\n        this.updateCanvasSize()\n    }\n\n    setModelAsCurrent(name: string, desc: string, path: string, center = true, maxScale = 25.0, title?: string) {\n        this.clearScene()\n        this.addLoadingSpinner()\n        this.loader.load(path, (gltf) => {\n            const box = new THREE.Box3().setFromObject(gltf.scene)\n            const size = box.getSize(new THREE.Vector3()).length()\n            const theCenter = new THREE.Vector3()\n            if (center) {\n                // Determine the size of the model, and move it to the center of the scene\n                box.getCenter(theCenter)\n                gltf.scene.position.x += (gltf.scene.position.x - theCenter.x)\n                gltf.scene.position.y += (gltf.scene.position.y - theCenter.y)\n                gltf.scene.position.z += (gltf.scene.position.z - theCenter.z)\n            } else {\n                theCenter.copy(gltf.scene.position)\n            }\n\n            this.controls.reset()\n            this.controls.maxDistance = size*10\n            this.camera.near = size / 100\n            this.camera.far = size * 100\n            this.camera.updateProjectionMatrix()\n\n            this.camera.position.copy(theCenter)\n            this.camera.position.x += size / 2.0\n            this.camera.position.y += size / 5.0\n            this.camera.position.z += size / 2.0\n            this.camera.lookAt(theCenter)\n\n            this.scene.add(gltf.scene)\n\n            let morphableMeshes: THREE.Mesh[] = []\n            gltf.scene.traverse(element => {\n                if (element instanceof THREE.Mesh && element.morphTargetInfluences?.length) {\n                    morphableMeshes.push(element)\n                }\n            })\n            if (morphableMeshes.length > 0) {\n                this.updateGUI(morphableMeshes, maxScale)\n            }\n\n            if (this.renderEdges) {\n                this.addWireframeToGroup(gltf.scene, { useMorphed: true })\n            }\n\n            this.controls.update()\n            this.removeLoadingSpinner()\n        })\n        this.updateCanvasSize()\n\n        if (this.titleBlock === undefined) {\n            this.titleBlock = new TitleBlock()\n            this.container.appendChild(this.titleBlock.domElement)\n        }\n        this.titleBlock.update(title ? title : name, desc)\n    }\n\n    addLoadingSpinner() {\n        if (this.loadingSpinner !== undefined) {\n            this.loadingSpinner.style.visibility = 'visible'\n            return\n        }\n\n        this.loadingSpinner = document.createElement('div')\n        this.loadingSpinner.appendChild(document.createElement('div'))\n        this.loadingSpinner.appendChild(document.createElement('div'))\n        this.loadingSpinner.appendChild(document.createElement('div'))\n        this.loadingSpinner.className = 'loading-spinner'\n        this.container.appendChild(this.loadingSpinner)\n    }\n\n    removeLoadingSpinner() {\n        if (this.loadingSpinner === undefined)\n            return\n\n        this.loadingSpinner.style.visibility = 'hidden'\n    }\n\n    addGUI() {\n        this.destroyGUI()\n        this.gui = new GUI({ autoPlace: false })\n\n        let guiContainer = document.getElementById('gui-wrapper') as HTMLDivElement | null\n        if (guiContainer === null) {\n            guiContainer = document.createElement('div')\n            guiContainer.id = 'gui-wrapper'\n            this.container.appendChild(guiContainer)\n        }\n        guiContainer.appendChild(this.gui.domElement)\n\n        return this.gui\n    }\n\n    updateGUI(morphMeshes: THREE.Mesh[], maxScale = 25.0) {\n        const gui = this.gui ? this.gui : this.addGUI()\n        const params = {\n            Scale: 0.5*maxScale,\n        }\n\n        gui.controllers.forEach(controller => {\n            controller.destroy()\n        })\n\n        const updateScale = (scale: number) => {\n            morphMeshes.forEach(mesh => {\n                if (mesh.morphTargetInfluences?.length){\n                    mesh.morphTargetInfluences.forEach((_, index, mti) => {\n                        mti[index] = scale\n                    })\n                    if (this.renderEdges) {\n                        this.updateWireframe(mesh, { useMorphed: true })\n                    }\n                }\n            })\n            this.render()\n        }\n\n        gui.add(params, 'Scale', 0, maxScale, 0.01).onChange(updateScale)\n        updateScale(params.Scale)\n    }\n\n    destroyGUI() {\n        if (this.gui !== undefined) {\n            this.gui.domElement.remove()\n            this.gui.destroy()\n            this.gui = undefined\n        }\n    }\n\n    addLights() {\n        // three.js now uses a \"non-scaled\" lighting intensity, so need to\n        // multiply by pi? Weird.\n        const ambient = new THREE.AmbientLight(0xFFFFFF, 0.35 * Math.PI)\n        const directional = new THREE.DirectionalLight(0xFFFFFF, 0.65 * Math.PI)\n        directional.position.set(1, 1, 0)\n\n        this.camera.add(ambient, directional)\n    }\n\n    addWireframeToGroup(group: THREE.Group, options?: WireframeOptions) {\n        // For each material, turn on polygonOffset. This very slightly\n        // moves the surface to prevent z-fighting with the wireframe. Store\n        // (and check for) materials we've already updated.\n        const updatedMaterials: THREE.Material[] = []\n        const setPolygonOffset = (material: THREE.Material) => {\n            if (!updatedMaterials.includes(material)) {\n                console.log('Updating material...')\n                material.polygonOffset = true\n                material.polygonOffsetFactor = 1\n                material.polygonOffsetUnits = 1\n                material.needsUpdate = true\n                updatedMaterials.push(material)\n            }\n        }\n\n        group.traverse(element => {\n            if (element instanceof THREE.Mesh) {\n                if (element.material instanceof THREE.Material) {\n                    setPolygonOffset(element.material)\n                } else {\n                    element.material.forEach(setPolygonOffset)\n                }\n                // Create the wireframe from the mesh geometry.\n                this.updateWireframe(element, options)\n            }\n        });\n    }\n\n    /**\n     * Remove any existing wireframe(s) from a mesh.\n     *\n     * @param mesh The mesh to remove wireframe(s) from.\n     */\n    removeWireframe(mesh: THREE.Mesh) {\n        mesh.children.forEach(child => {\n            if (child instanceof THREE.LineSegments) {\n                mesh.remove(child)\n            }\n        })\n    }\n\n    /**\n     * Update the wireframe for a given mesh.\n     *\n     * @param mesh The mesh to add a wireframe to.\n     * @param useMorphed If true, use the morphed geometry to create the edges. Buggy. Default: false\n     * @param useWireframe If true, use WireframeGeometry instead of EdgesGeometry.\n     */\n    updateWireframe(mesh: THREE.Mesh, options?: WireframeOptions) {\n        // Remove the previous wireframe(s)\n        this.removeWireframe(mesh)\n\n        const wireMaterial = new THREE.LineBasicMaterial({\n            color: this.wireframeColor,\n            linewidth: 1.5,\n        })\n\n        const geometry = options?.useMorphed\n            ? getMorphedGeometry2(mesh, 0)\n            : mesh.geometry\n\n        const wireGeometry = options?.useWireframe\n            ? new THREE.WireframeGeometry(geometry)\n            : new THREE.EdgesGeometry(geometry, this.edgeThresholdAngle)\n\n        const wireframe = new THREE.LineSegments(wireGeometry, wireMaterial)\n        mesh.add(wireframe)\n    }\n\n    clearScene() {\n        this.scene.traverse(child => {\n            if (child instanceof THREE.Group) {\n                this.scene.remove(child)\n            }\n        })\n    }\n\n    updateCanvasSize() {\n        if (this.container !== undefined) {\n            console.log('Updating canvas size...')\n            this.camera.aspect = this.container.clientWidth / this.container.clientHeight\n            this.camera.updateProjectionMatrix()\n            // Fire twice; fixes issue where scrollbars leave blank edges around\n            // the canvas.\n            this.renderer.setSize(this.container.clientWidth, this.container.clientHeight)\n            this.renderer.setSize(this.container.clientWidth, this.container.clientHeight)\n            this.render()\n        }\n    }\n\n    updatePixelRatio() {\n        this.renderer.setPixelRatio(window.devicePixelRatio)\n    }\n\n    render() {\n        this.renderer.render(this.scene, this.camera)\n    }\n}\n\n\nclass TitleBlock {\n    domElement: HTMLDivElement\n    private nameElement: HTMLHeadElement\n    private descElement: HTMLParagraphElement\n\n    constructor() {\n        this.domElement = document.createElement('div')\n        this.domElement.id = 'model-title'\n\n        this.nameElement = document.createElement('h2')\n        this.nameElement.id = 'model-name'\n        this.descElement = document.createElement('p')\n        this.descElement.id = 'model-desc'\n\n        this.domElement.appendChild(this.nameElement)\n        this.domElement.appendChild(this.descElement)\n    }\n\n    update(name: string, desc: string = \"\") {\n        this.nameElement.innerText = name\n        this.descElement.innerHTML = desc\n    }\n\n    destroy() {\n        this.domElement.remove()\n    }\n}\n","import { ModelViewer } from './viewer'\nimport './app.css'\n\n\nenum DisplayMode {\n    Landscape,\n    Portrait\n}\n\n\nexport class App {\n    groups: SidebarGroup[]\n    contributors: string[] | undefined\n    contentLinkMap: Map<string, SidebarItem>\n    contentScrollState: Map<string, number>\n    contentContainer: HTMLElement\n    currentElement: HTMLElement\n    currentContent: string\n    sidebarIsOpen: Boolean = true\n    contentSizingMode: DisplayMode = DisplayMode.Landscape\n    forceTrailingSlash = true\n\n    // Default HTML displayed when no item selected, or hash doesn't point to an\n    // actual item.\n    defaultHTML = '<p>Select an item from the sidebar.</p>'\n\n    constructor(params: { title: string, groups: SidebarGroup[], contributors?: string[], addGuideLink?: boolean }) {\n        this.groups = params.groups;\n        this.contributors = params.contributors;\n        this.contentLinkMap = new Map<string, SidebarItem>()\n        this.contentScrollState = new Map<string, number>()\n\n        // Set up the viewer\n        this.contentContainer = document.getElementById('content-container') as HTMLDivElement\n        const headerTitle = document.getElementById('header-title') as HTMLHeadingElement\n        headerTitle.innerHTML = params.title\n\n        // Set up the sidebar\n        const sidebar = document.getElementById('sidebar') as HTMLElement\n        params.groups.forEach((group, index) => {\n            // Each group corresponds to a section in the sidebar.\n            let section = document.createElement('section')\n            section.id = 'sidebar.section.' + group.name.replace(/\\s/g, '_')\n\n            // Each section consists of an <h2> header and a list of items.\n            let header = document.createElement('h2')\n            let list = document.createElement('ul')\n            header.innerHTML = group.name\n            section.appendChild(header)\n            section.appendChild(list)\n\n            // If the group has items, append each item to the list.\n            if (group.items != null) {\n                group.items.forEach(item => {\n                    list.appendChild(item.createItem())\n                    this.contentLinkMap[item.linkname] = item\n                })\n            }\n\n            sidebar.appendChild(section)\n            // Sections are separated by <hr>s. But we don't add a rule after\n            // the last group.\n            if (index !== params.groups.length - 1) {\n                sidebar.appendChild(document.createElement('hr'))\n            }\n        })\n\n        // Sidebar footer\n        sidebar.appendChild(document.createElement('hr'))\n        const sidebarFooter = document.createElement('section')\n        sidebarFooter.className = 'sidebar-footer'\n        sidebar.appendChild(sidebarFooter)\n        const sidebarFooterItems = document.createElement('ul')\n        sidebarFooter.appendChild(sidebarFooterItems)\n\n        if (params.addGuideLink || params.addGuideLink === undefined) {\n            sidebarFooterItems.appendChild(this.guideTo2dDrawingsLink())\n        }\n\n        if (this.contributors !== undefined && this.contributors.length !== 0) {\n            const content = this.contributorsContent()\n            const item = new HtmlItem({ name: 'credits', content: content })\n            this.contentLinkMap[item.linkname] = item\n\n            const creditsLink = document.createElement('a')\n            creditsLink.href = './#credits'\n            creditsLink.innerHTML = 'credits'\n            const creditsLinkItem = document.createElement('li')\n            creditsLinkItem.appendChild(creditsLink)\n            sidebarFooterItems.appendChild(creditsLinkItem)\n        }\n\n        // Responsive content sizing\n        // On portrait displays, we want the content to extend under the sidebar\n        // even when its open.\n        window.addEventListener('resize', this.updateDisplayMode.bind(this))\n        this.updateDisplayMode()\n        if (this.contentSizingMode === DisplayMode.Portrait) {\n            this.toggleSidebar()\n        }\n\n        // Toggling of sidebar\n        const sidebarToggle = document.getElementById('sidebar-toggle') as HTMLButtonElement\n        sidebarToggle.onclick = this.toggleSidebar.bind(this)\n\n        // The current content item is specified by the hash. setCurrentContent\n        // handles:\n        // - saving/restoring the scroll state\n        // - calling the 'onclick' method of the activated item\n        //\n        window.addEventListener('hashchange', this.setCurrentContent.bind(this))\n        this.setCurrentContent()\n\n        // Add app as global variable for console access\n        ;(window as any).modelApp = this\n    }\n\n    updateDisplayMode() {\n        if (window.innerWidth < window.innerHeight && this.contentSizingMode === DisplayMode.Landscape) {\n            this.contentSizingMode = DisplayMode.Portrait\n            if (this.sidebarIsOpen) {\n                this.contentContainer.style.width = '100%'\n            }\n        } else if (window.innerWidth > window.innerHeight && this.contentSizingMode === DisplayMode.Portrait) {\n            this.contentSizingMode = DisplayMode.Landscape\n            if (this.sidebarIsOpen) {\n                this.contentContainer.style.width = 'calc(100% - 250px)'\n            }\n        }\n    }\n\n    toggleSidebar() {\n        const sidebar = document.getElementById('sidebar') as HTMLElement\n        if (this.sidebarIsOpen) {\n            sidebar.style.visibility = 'hidden'\n            if (this.contentSizingMode === DisplayMode.Landscape)\n                this.contentContainer.style.width = '100%'\n        } else {\n            sidebar.style.visibility = 'visible'\n            if (this.contentSizingMode === DisplayMode.Landscape)\n                this.contentContainer.style.width = 'calc(100% - 250px)'\n        }\n        this.sidebarIsOpen = !this.sidebarIsOpen\n    }\n\n    setDefaultContent() {\n        const section = document.createElement('section')\n        section.className = 'html-content'\n        section.innerHTML = this.defaultHTML\n        this.setContentElement(section)\n    }\n\n    contributorsContent() {\n        const section = document.createElement('section')\n        section.className = 'html-content'\n\n        const thanks = document.createElement('p')\n        thanks.innerHTML = 'This collection was developed by:'\n        section.appendChild(thanks)\n\n        const contributorList = document.createElement('ul')\n        this.contributors?.forEach(contributor => {\n            const item = document.createElement('li')\n            item.innerHTML = contributor\n            contributorList.appendChild(item)\n        })\n        section.appendChild(contributorList)\n\n        return section.innerHTML\n    }\n\n    guideTo2dDrawingsLink() {\n        return new Link({\n            name: 'guide to 2d drawings',\n            url: '../guide-to-2d-drawings/#Types-of-drawings',\n            openInNewTab: false,\n        }).createItem()\n    }\n\n    setContentElement(content: HTMLElement) {\n        if (this.currentElement != null) {\n            this.contentContainer.removeChild(this.currentElement)\n        }\n        this.currentElement = content\n        this.contentContainer.appendChild(this.currentElement)\n        // Hide sidebar after clicking link if in portrait mode\n        if (this.contentSizingMode === DisplayMode.Portrait && this.sidebarIsOpen) {\n            this.toggleSidebar()\n        }\n    }\n\n    setCurrentContent() {\n        const loc = window.location\n        if (this.forceTrailingSlash && !loc.pathname.endsWith('/')) {\n            window.location.replace(loc.origin + loc.pathname + '/' + loc.hash)\n        }\n\n        const linkname = window.location.hash.substr(1)\n        const currentItem: SidebarItem = this.contentLinkMap[this.currentContent]\n        const cleanup = currentItem ? currentItem.destroyContent : () => { return Promise.resolve() }\n\n        const item: SidebarItem = this.contentLinkMap[linkname]\n        if (linkname in this.contentLinkMap) {\n            cleanup().then(() => {\n                return item.createContent(this.contentContainer)\n            }).then(content => {\n                // Save scroll position\n                if (this.currentElement) {\n                    console.log('Saving', this.currentContent, 'scroll position as', this.contentContainer.scrollTop)\n                    this.contentScrollState[this.currentContent] = this.contentContainer.scrollTop\n                }\n\n                // Set up content element\n                this.setContentElement(content)\n                this.currentContent = linkname\n                console.log(linkname, 'loaded;', 'The current scroll position is', this.contentContainer.scrollTop)\n\n                // Restore scroll position\n                const scrollPosition = this.contentScrollState[linkname]\n                if (scrollPosition) {\n                    console.log('Restoring', linkname, 'to scroll position', scrollPosition)\n                    this.contentContainer.scrollBy(scrollPosition, scrollPosition)\n                    console.log(linkname, 'restored;', 'The current scroll position is', this.contentContainer.scrollTop)\n                }\n            }, error => {\n                if (error instanceof NoContentError) {\n                    /* No content, no problem */\n                } else {\n                    console.error(error)\n                }\n            })\n        } else {\n            this.setDefaultContent()\n        }\n    }\n}\n\n\nclass NoContentError extends Error { }\n\n\nabstract class SidebarItem {\n    name: string\n    linkname: string\n\n    constructor(name: string) {\n        this.name = name\n        this.linkname = name.replace(/\\s/g, '-')\n    }\n\n    /**\n     * Create the list item that will be added to the sidebar.\n     * @returns listitem - the created HTMLLIElement\n     */\n    abstract createItem(): HTMLLIElement\n\n    /**\n     * Create the content element that will be displayed.\n     *\n     * @param contentContainer - the parent HTMLElement, provided by the running\n     *                           App instance.\n     * @returns Promise&lt;HTMLElement&gt; - the created HTMLElement. The App will handle\n     *                           adding this to the page.\n     */\n    createContent(contentContainer: HTMLElement): Promise<HTMLElement> {\n        return Promise.reject(new NoContentError)\n    }\n\n    /**\n     * Perform cleanup before switching to new content.\n     *\n     */\n    destroyContent() {\n        return Promise.resolve()\n    }\n}\n\n\nexport interface SidebarGroup {\n    name: string\n    items?: SidebarItem[]\n}\n\n\nexport class Link extends SidebarItem {\n    url: string\n    openInNewTab?: boolean\n\n    constructor(params: { name: string, url: string, openInNewTab?: boolean }) {\n        super(params.name)\n        this.url = params.url\n        this.openInNewTab = params.openInNewTab\n    }\n\n    createItem(): HTMLLIElement {\n        const listitem = document.createElement('li')\n        const anchor = document.createElement('a')\n        anchor.href = this.url\n        anchor.innerHTML = this.name\n\n        // Open link in new tab/window\n        if (this.openInNewTab) {\n            anchor.target = '_blank'\n            anchor.rel = 'noreferrer noopener'\n        }\n\n        listitem.appendChild(anchor)\n        return listitem\n    }\n}\n\n\nexport class HtmlItem extends SidebarItem {\n    content: string\n    classes = ['html-content']\n\n    constructor(params: { name: string, content: string, classes?: string[] }) {\n        super(params.name)\n        this.content = params.content\n        if (params.classes) {\n            this.classes.push(...params.classes)\n        }\n    }\n\n    async createContent(contentContainer: HTMLElement): Promise<HTMLElement> {\n        const section = document.createElement('section')\n        section.classList.add(...this.classes)\n        section.innerHTML = this.content\n        // If MathJax is already loaded, then we need to tell it to typeset the\n        // page. If it's not finished loading, it'll typeset the page once it\n        // finishes.\n        if ((window as any).MathJax.typesetPromise !== undefined)\n            await (window as any).MathJax.typesetPromise([section])\n        return Promise.resolve(section)\n    }\n\n    createItem(): HTMLLIElement {\n        const listitem = document.createElement('li')\n        const anchor = document.createElement('a')\n        anchor.href = `#${this.linkname}`\n        anchor.innerHTML = this.name\n        listitem.appendChild(anchor)\n        return listitem\n    }\n}\n\n\nexport class Model extends SidebarItem {\n    path: string\n    centerModel?: boolean\n    maxScale?: number\n    desc: string = \"\"\n    title?: string\n    static viewer: ModelViewer\n\n    constructor(params: { name: string, path: string, center?: boolean, maxScale?: number, desc?: string, title?: string }) {\n        super(params.name)\n        this.path = params.path\n        this.centerModel = params.center\n        this.maxScale = params.maxScale\n        if (params.desc) this.desc = params.desc\n        this.title = params.title\n        if (Model.viewer === undefined) {\n            Model.viewer = new ModelViewer()\n        }\n    }\n\n    createContent(contentContainer: HTMLElement): Promise<HTMLCanvasElement> {\n        Model.viewer.attachToContainer(contentContainer)\n        Model.viewer.setModelAsCurrent(this.name, this.desc, this.path, this.centerModel, this.maxScale, this.title)\n        return Promise.resolve(Model.viewer.renderer.domElement)\n    }\n\n    destroyContent() {\n        Model.viewer.destroyContent()\n        return Promise.resolve()\n    }\n\n    createItem() {\n        const listitem = document.createElement('li')\n        const anchor = document.createElement('a')\n        anchor.href = `#${this.linkname}`\n        anchor.innerHTML = this.name\n        listitem.appendChild(anchor)\n        return listitem\n    }\n}\n"],"names":["colors","aisc_blue","orange","white","smokey","valley","globe","smokey_x","gray_1","gray_2","gray_3","gray_4","black","ModelViewer","constructor","wireframeColor","backgroundColor","renderEdges","edgeThresholdAngle","draco","DRACOLoader","setDecoderPath","this","loader","GLTFLoader","setDRACOLoader","scene","background","camera","addLights","add","renderer","antialias","setPixelRatio","window","devicePixelRatio","outputColorSpace","controls","OrbitControls","domElement","addEventListener","render","bind","update","matchMedia","updatePixelRatio","resizeCallback","updateCanvasSize","resizeObserver","MutationObserver","modelViewer","destroyContent","destroyGUI","titleBlock","destroy","undefined","attachToContainer","container","disconnect","observe","attributeFilter","childList","setModelAsCurrent","name","desc","path","center","maxScale","title","clearScene","addLoadingSpinner","load","gltf","box","setFromObject","size","getSize","length","theCenter","getCenter","position","x","y","z","copy","reset","maxDistance","near","far","updateProjectionMatrix","lookAt","morphableMeshes","traverse","element","morphTargetInfluences","push","updateGUI","addWireframeToGroup","useMorphed","removeLoadingSpinner","TitleBlock","appendChild","loadingSpinner","document","createElement","className","style","visibility","addGUI","gui","autoPlace","guiContainer","getElementById","id","morphMeshes","params","Scale","controllers","forEach","controller","updateScale","scale","mesh","_","index","mti","updateWireframe","onChange","remove","ambient","Math","PI","directional","set","group","options","updatedMaterials","setPolygonOffset","material","includes","console","log","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","needsUpdate","removeWireframe","children","child","wireMaterial","color","linewidth","geometry","clone","attributes","Error","N","array","morphedData","Float32Array","influence","i","morph","morphAttributes","morphedGeometry","setIndex","getMorphedGeometry2","wireGeometry","useWireframe","wireframe","aspect","clientWidth","clientHeight","setSize","nameElement","descElement","innerText","innerHTML","DisplayMode","App","sidebarIsOpen","contentSizingMode","Landscape","forceTrailingSlash","defaultHTML","groups","contributors","contentLinkMap","Map","contentScrollState","contentContainer","sidebar","section","replace","header","list","items","item","createItem","linkname","sidebarFooter","sidebarFooterItems","addGuideLink","guideTo2dDrawingsLink","content","contributorsContent","HtmlItem","creditsLink","href","creditsLinkItem","updateDisplayMode","Portrait","toggleSidebar","onclick","setCurrentContent","modelApp","innerWidth","innerHeight","width","setDefaultContent","setContentElement","thanks","contributorList","contributor","Link","url","openInNewTab","currentElement","removeChild","loc","location","pathname","endsWith","origin","hash","substr","currentItem","currentContent","cleanup","Promise","resolve","then","createContent","scrollTop","scrollPosition","scrollBy","error","NoContentError","SidebarItem","reject","super","listitem","anchor","target","rel","classes","classList","MathJax","typesetPromise","Model","centerModel","viewer"],"sourceRoot":""}